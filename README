# CSE-VM

this is a exprimental project to display the mechnanism of computer for student who just stapped in the field of CS

## Design of Instruction

### inst

--------------------------------------
|                R-type              |
--------------------------------------
|  op  | rd  | rs1 | rs2 |    imm    |
--------------------------------------
|******|*****|*****|*****|***********|
--------------------------------------
|                I-type              |
--------------------------------------
|  op  | rd  | rs1 |       imm       |
--------------------------------------
|******|*****|*****|**************** |
--------------------------------------
|                S-type              |
--------------------------------------
|  op  |                             |
--------------------------------------
|******|00000000000000000000000000   |
--------------------------------------

### op

--------------------------------------------------------
|name   |type |opcode  |operation                      |
--------------------------------------------------------
|ADD    |R    |000000  |rd = rs1 + rs2                 |
--------------------------------------------------------
|SUB    |R    |000001  |rd = rs1 - rs2                 |
--------------------------------------------------------
|ADDI   |I    |010000  |rd = rs1 + imm                 |
--------------------------------------------------------
|SUBI   |I    |010001  |rd = rs1 - imm                 |
--------------------------------------------------------
|BEQ    |R    |001000  |if (rs1 == rs2) pc = pc + imm  |
--------------------------------------------------------
|BNEQ   |R    |001001  |if (rs1 != rs2) pc = pc + imm  |
--------------------------------------------------------
|BLT    |R    |001010  |if (rs1 < rs2) pc = pc + imm   |
--------------------------------------------------------
|BGE    |R    |001011  |if (rs1 >= rs2) pc = pc + imm  |
--------------------------------------------------------
|STORE  |I    |011000  |mem(rs1 + imm) = rd            |
--------------------------------------------------------
|LOAD   |I    |011001  |rd = mem(rs1 + imm)            |
--------------------------------------------------------
|JMP    |I    |011100  |pc = pc + imm; rd = pc + 4;    |
--------------------------------------------------------
|JMPR   |I    |011101  |pc = rs1 +imm; rd = pc + 4;    |
--------------------------------------------------------
|SCALL  |S    |011110  |                               |
--------------------------------------------------------
|AUIPC  |I    |111110  |rd = pc + imm << 16            |
--------------------------------------------------------

### gpr

-----------------------------------------
|NO |name   |descrpition                |
-----------------------------------------
|0  |zr     |always equals zero         |
-----------------------------------------
|1  |sp     |stack pointer              |
-----------------------------------------
|2-5|r0-r3  |temporaries                |
-----------------------------------------
|6-7|a0-a1  |function arg/return values |
-----------------------------------------
|8  |ra     |function return address    |
-----------------------------------------

### system call

----------------
|NO|description|
----------------
|0 |exit       |
----------------
|1 |putint     |
----------------
|2 |putchar    |
----------------
|3 |getchar    |
----------------

### memory
-----------------
| stack segment |
-----------------
| text segment  |
-----------------
| data segment  |
-----------------

### stack frame

--------------------
|    stack top     |<--sp
--------------------
|temporary variable|
--------------------
|temporary variable|
--------------------
|temporary variable|<--frame bottome
--------------------
|temporary variable| 
--------------------
|temporary variable|
--------------------
|temporary variable|<--frame bottome
--------------------
